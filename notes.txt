MVP:
 Have 5 fonts randomized from Google fonts loaded
  fonts in css, need to be randomized
 Have 10 colors randomized
  colors:
    #ee9b00
    #005f73
    #656d4a
    #c2c5aa
    #6c757d

    #577590
    #ecbcfd
    #c8e7ff
    #892b64
    #5c4d7d

    #fad2e1
    #d6e2e9
    #4ecdc4
    #ee964b
    #b2967d
 Have an transparent block for the quotes
 Call the quotes
 Media queries for size output
 Return to home

Apple mainly css
https://developer.mozilla.org/en-US/docs/Web/CSS/WebKit_Extensions

The Web Content Accessibility Guidelines (WCAG) specify a minimum size of 44 by 44 CSS pixels for all interactive elements.

Use flex grid

Responsive Web Design

Taking the flexible layout concept, and formula, and reapplying it to all parts of a grid will create a completely dynamic website, scaling to every viewport size. For even more control within a flexible layout, you can also leverage the min-width, max-width, min-height, and max-height properties.

Size: 1600px x 900px
use center
proportions: 9:16

Not recommended?:
/* size info from https://www.w3schools.com/css/css_rwd_mediaqueries.asp */

/* Extra small devices (phones, 600px and down) */
@media only screen and (max-width: 600px) {
  div {font-size: 20px;}}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
  div {font-size: 30px;}}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {
  div {font-size: 40px;}}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {
  div {font-size: 50px;}}

/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (min-width: 1200px) {
  div {font-size: 60px;}}

@media only screen and (orientation: landscape) {
  orientation {background-color: #0000ff;}}

https://www.taniarascia.com/how-to-use-local-storage-with-javascript/
  
LocalStorage can only store strings. To store arrays or objects, you would have to convert them to strings using JSON.stringify(). To use the value after getting it, convert it back to an object using JSON.parse().

  <!-- <A HREF="/code-samples/basicpopup/" onClick="return popup(this, 'notes')">my popup</A>  or
  <BODY onLoad="popup('autopopup.html', 'ad')"> or
  <form METHOD=POST
    ACTION="../cgi-bin/mypopupcgi.pl"
    onSubmit="popupform(this, 'join')"> 
  <A HREF="/javascript/popup-windows/ #Closing_Popup_Windows_When_They_Go_to_the_Opener" 
  onClick="return targetopener(this,true)">Go Back</A>-->

from: https://javascript.plainenglish.io/how-to-detect-a-mobile-device-with-javascript-1c26e0002b31

const isMobile = window.matchMedia("only screen and (max-width: 760px)").matches;
if (isMobile) { }